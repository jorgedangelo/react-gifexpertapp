{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","addCategory","useState","category","setCategory","onSubmit","e","preventDefault","length","categories","type","value","onChange","target","getGifts","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","setCategories","idx","ReactDOM","render","document","getElementById"],"mappings":"qMA8BeA,EA3BK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACPC,mBAAS,IADF,mBAChCC,EADgC,KACtBC,EADsB,KAYvC,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACCJ,EAASK,OAAO,IACjBP,GAAY,SAACQ,GAAD,OAAiBN,GAAjB,mBAA8BM,OAC1CL,EAAY,OAKZ,2BACEM,KAAK,OACLC,MAAOR,EACPS,SAfkB,SAACN,GACvBF,EAAYE,EAAEO,OAAOF,Y,uBCNZG,EAAQ,uCAAG,WAAOX,GAAP,uBAAAY,EAAA,4DACP,mCACD,EACRC,EAHgB,yDAGwCC,UAAUd,GAHlD,kBAER,EAFQ,oBACP,oCADO,SAIHe,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAAEC,GAAID,EAAIC,GAAIC,MAAOF,EAAIE,MAAOV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAP5E,kBAQfM,GARe,4CAAH,sDCiBNO,EAdK,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBT,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAC3B,OACE,yBAAKI,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCaKO,MAhBf,YAAgC,IAAb9B,EAAY,EAAZA,SAAY,ECDH,SAACA,GAAc,IAAD,EACdD,mBAAS,CACjCmB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KASxC,OAJAC,qBAAU,WACRvB,EAASX,GAAUmC,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAEf,KAAMkB,EAAML,SAAS,SACjE,CAAC/B,IAEGgC,EDP2BK,CAAarC,GAAjCwB,EADe,EACrBN,KAAca,EADO,EACPA,QAEtB,OACE,oCACE,wBAAIJ,UAAU,qCAAqC3B,GAClD+B,GAAW,uBAAGJ,UAAU,oCAAb,eACZ,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEQzBkB,MAhBf,WAAyB,IAAD,EACcxC,mBAAS,CAAC,cADxB,mBACfO,EADe,KACHkC,EADG,KAEtB,OACE,oCACE,8CACA,kBAAC,EAAD,CAAa1C,YAAa0C,IAC1B,6BACA,4BACGlC,EAAWc,KAAI,SAACpB,EAAUyC,GAAX,OACb,kBAAC,EAAD,CAASH,IAAKtC,EAASyC,EAAKzC,SAAUA,U,YCTjD0C,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.6e21a4a2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ addCategory }) => {\n  const [category, setCategory] = useState('');\n  const handleInputText = (e) => {\n    setCategory(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(category.length>2){\n      addCategory((categories) => [category, ...categories]);\n      setCategory('');\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={category}\n        onChange={handleInputText}\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  addCategory: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;","export const getGifts = async (category) => {\n  const apiKey = '3ByKj8qSqbs54uyrPOZbBGJraZDWIY15';\n  const limit = 5;\n  const url = `https://api.giphy.com/v1/gifs/search?lang=es&q=${encodeURI(category)}&limit=${limit}&api_key=${apiKey}`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => ({ id: img.id, title: img.title, url: img.images?.downsized_medium.url }));\n  return gifs;\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GifGridItem = ({id,url,title}) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}\n\nGifGridItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default GifGridItem\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nfunction GifGrid({ category }) {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default GifGrid;\n","import { useState,useEffect } from 'react';\nimport { getGifts } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGifts(category).then((imgs) => setState({ data: imgs, loading: false }));\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport  AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n//import './GifExpertApp.css';\n\nfunction GifExpertApp() {\n  const [categories, setCategories] = useState(['One Punch']);\n  return (\n    <>\n      <h2>Gif Expert App</h2>\n      <AddCategory addCategory={setCategories}/>\n      <hr />\n      <ol>\n        {categories.map((category, idx) => (\n           <GifGrid key={category+idx} category={category}/>\n        ))}\n      </ol>\n    </>\n  );\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport '../node_modules/animate.css/animate.min.css';\nimport './index.css';\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n"],"sourceRoot":""}